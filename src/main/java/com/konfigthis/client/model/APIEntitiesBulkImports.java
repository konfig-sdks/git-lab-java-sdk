/*
 * GitLab API
 * An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.APIEntitiesBulkImportsEntityFailure;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * API_Entities_BulkImports model
 */
@ApiModel(description = "API_Entities_BulkImports model")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class APIEntitiesBulkImports {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_BULK_IMPORT_ID = "bulk_import_id";
  @SerializedName(SERIALIZED_NAME_BULK_IMPORT_ID)
  private Integer bulkImportId;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    CREATED("created"),
    
    STARTED("started"),
    
    FINISHED("finished"),
    
    TIMEOUT("timeout"),
    
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * Gets or Sets entityType
   */
  @JsonAdapter(EntityTypeEnum.Adapter.class)
 public enum EntityTypeEnum {
    GROUP("group"),
    
    PROJECT("project");

    private String value;

    EntityTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityTypeEnum fromValue(String value) {
      for (EntityTypeEnum b : EntityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private EntityTypeEnum entityType;

  public static final String SERIALIZED_NAME_SOURCE_FULL_PATH = "source_full_path";
  @SerializedName(SERIALIZED_NAME_SOURCE_FULL_PATH)
  private String sourceFullPath;

  public static final String SERIALIZED_NAME_DESTINATION_FULL_PATH = "destination_full_path";
  @SerializedName(SERIALIZED_NAME_DESTINATION_FULL_PATH)
  private String destinationFullPath;

  public static final String SERIALIZED_NAME_DESTINATION_NAME = "destination_name";
  @SerializedName(SERIALIZED_NAME_DESTINATION_NAME)
  private String destinationName;

  public static final String SERIALIZED_NAME_DESTINATION_SLUG = "destination_slug";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SLUG)
  private String destinationSlug;

  public static final String SERIALIZED_NAME_DESTINATION_NAMESPACE = "destination_namespace";
  @SerializedName(SERIALIZED_NAME_DESTINATION_NAMESPACE)
  private String destinationNamespace;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_NAMESPACE_ID = "namespace_id";
  @SerializedName(SERIALIZED_NAME_NAMESPACE_ID)
  private Integer namespaceId;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_FAILURES = "failures";
  @SerializedName(SERIALIZED_NAME_FAILURES)
  private List<APIEntitiesBulkImportsEntityFailure> failures = null;

  public static final String SERIALIZED_NAME_MIGRATE_PROJECTS = "migrate_projects";
  @SerializedName(SERIALIZED_NAME_MIGRATE_PROJECTS)
  private Boolean migrateProjects;

  public APIEntitiesBulkImports() {
  }

  public APIEntitiesBulkImports id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public APIEntitiesBulkImports bulkImportId(Integer bulkImportId) {
    
    
    
    
    this.bulkImportId = bulkImportId;
    return this;
  }

   /**
   * Get bulkImportId
   * @return bulkImportId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getBulkImportId() {
    return bulkImportId;
  }


  public void setBulkImportId(Integer bulkImportId) {
    
    
    
    this.bulkImportId = bulkImportId;
  }


  public APIEntitiesBulkImports status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CREATED", value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public APIEntitiesBulkImports entityType(EntityTypeEnum entityType) {
    
    
    
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EntityTypeEnum getEntityType() {
    return entityType;
  }


  public void setEntityType(EntityTypeEnum entityType) {
    
    
    
    this.entityType = entityType;
  }


  public APIEntitiesBulkImports sourceFullPath(String sourceFullPath) {
    
    
    
    
    this.sourceFullPath = sourceFullPath;
    return this;
  }

   /**
   * Get sourceFullPath
   * @return sourceFullPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "source_group", value = "")

  public String getSourceFullPath() {
    return sourceFullPath;
  }


  public void setSourceFullPath(String sourceFullPath) {
    
    
    
    this.sourceFullPath = sourceFullPath;
  }


  public APIEntitiesBulkImports destinationFullPath(String destinationFullPath) {
    
    
    
    
    this.destinationFullPath = destinationFullPath;
    return this;
  }

   /**
   * Get destinationFullPath
   * @return destinationFullPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "some_group/source_project", value = "")

  public String getDestinationFullPath() {
    return destinationFullPath;
  }


  public void setDestinationFullPath(String destinationFullPath) {
    
    
    
    this.destinationFullPath = destinationFullPath;
  }


  public APIEntitiesBulkImports destinationName(String destinationName) {
    
    
    
    
    this.destinationName = destinationName;
    return this;
  }

   /**
   * Get destinationName
   * @return destinationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "destination_slug", value = "")

  public String getDestinationName() {
    return destinationName;
  }


  public void setDestinationName(String destinationName) {
    
    
    
    this.destinationName = destinationName;
  }


  public APIEntitiesBulkImports destinationSlug(String destinationSlug) {
    
    
    
    
    this.destinationSlug = destinationSlug;
    return this;
  }

   /**
   * Get destinationSlug
   * @return destinationSlug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "destination_slug", value = "")

  public String getDestinationSlug() {
    return destinationSlug;
  }


  public void setDestinationSlug(String destinationSlug) {
    
    
    
    this.destinationSlug = destinationSlug;
  }


  public APIEntitiesBulkImports destinationNamespace(String destinationNamespace) {
    
    
    
    
    this.destinationNamespace = destinationNamespace;
    return this;
  }

   /**
   * Get destinationNamespace
   * @return destinationNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "destination_path", value = "")

  public String getDestinationNamespace() {
    return destinationNamespace;
  }


  public void setDestinationNamespace(String destinationNamespace) {
    
    
    
    this.destinationNamespace = destinationNamespace;
  }


  public APIEntitiesBulkImports parentId(Integer parentId) {
    
    
    
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    
    
    
    this.parentId = parentId;
  }


  public APIEntitiesBulkImports namespaceId(Integer namespaceId) {
    
    
    
    
    this.namespaceId = namespaceId;
    return this;
  }

   /**
   * Get namespaceId
   * @return namespaceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getNamespaceId() {
    return namespaceId;
  }


  public void setNamespaceId(Integer namespaceId) {
    
    
    
    this.namespaceId = namespaceId;
  }


  public APIEntitiesBulkImports projectId(Integer projectId) {
    
    
    
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    
    
    
    this.projectId = projectId;
  }


  public APIEntitiesBulkImports createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-05-28T11:42:42Z", value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public APIEntitiesBulkImports updatedAt(OffsetDateTime updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-05-28T11:42:42Z", value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public APIEntitiesBulkImports failures(List<APIEntitiesBulkImportsEntityFailure> failures) {
    
    
    
    
    this.failures = failures;
    return this;
  }

  public APIEntitiesBulkImports addFailuresItem(APIEntitiesBulkImportsEntityFailure failuresItem) {
    if (this.failures == null) {
      this.failures = new ArrayList<>();
    }
    this.failures.add(failuresItem);
    return this;
  }

   /**
   * Get failures
   * @return failures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<APIEntitiesBulkImportsEntityFailure> getFailures() {
    return failures;
  }


  public void setFailures(List<APIEntitiesBulkImportsEntityFailure> failures) {
    
    
    
    this.failures = failures;
  }


  public APIEntitiesBulkImports migrateProjects(Boolean migrateProjects) {
    
    
    
    
    this.migrateProjects = migrateProjects;
    return this;
  }

   /**
   * Get migrateProjects
   * @return migrateProjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getMigrateProjects() {
    return migrateProjects;
  }


  public void setMigrateProjects(Boolean migrateProjects) {
    
    
    
    this.migrateProjects = migrateProjects;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the APIEntitiesBulkImports instance itself
   */
  public APIEntitiesBulkImports putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIEntitiesBulkImports apIEntitiesBulkImports = (APIEntitiesBulkImports) o;
    return Objects.equals(this.id, apIEntitiesBulkImports.id) &&
        Objects.equals(this.bulkImportId, apIEntitiesBulkImports.bulkImportId) &&
        Objects.equals(this.status, apIEntitiesBulkImports.status) &&
        Objects.equals(this.entityType, apIEntitiesBulkImports.entityType) &&
        Objects.equals(this.sourceFullPath, apIEntitiesBulkImports.sourceFullPath) &&
        Objects.equals(this.destinationFullPath, apIEntitiesBulkImports.destinationFullPath) &&
        Objects.equals(this.destinationName, apIEntitiesBulkImports.destinationName) &&
        Objects.equals(this.destinationSlug, apIEntitiesBulkImports.destinationSlug) &&
        Objects.equals(this.destinationNamespace, apIEntitiesBulkImports.destinationNamespace) &&
        Objects.equals(this.parentId, apIEntitiesBulkImports.parentId) &&
        Objects.equals(this.namespaceId, apIEntitiesBulkImports.namespaceId) &&
        Objects.equals(this.projectId, apIEntitiesBulkImports.projectId) &&
        Objects.equals(this.createdAt, apIEntitiesBulkImports.createdAt) &&
        Objects.equals(this.updatedAt, apIEntitiesBulkImports.updatedAt) &&
        Objects.equals(this.failures, apIEntitiesBulkImports.failures) &&
        Objects.equals(this.migrateProjects, apIEntitiesBulkImports.migrateProjects)&&
        Objects.equals(this.additionalProperties, apIEntitiesBulkImports.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bulkImportId, status, entityType, sourceFullPath, destinationFullPath, destinationName, destinationSlug, destinationNamespace, parentId, namespaceId, projectId, createdAt, updatedAt, failures, migrateProjects, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIEntitiesBulkImports {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bulkImportId: ").append(toIndentedString(bulkImportId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    sourceFullPath: ").append(toIndentedString(sourceFullPath)).append("\n");
    sb.append("    destinationFullPath: ").append(toIndentedString(destinationFullPath)).append("\n");
    sb.append("    destinationName: ").append(toIndentedString(destinationName)).append("\n");
    sb.append("    destinationSlug: ").append(toIndentedString(destinationSlug)).append("\n");
    sb.append("    destinationNamespace: ").append(toIndentedString(destinationNamespace)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    namespaceId: ").append(toIndentedString(namespaceId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    failures: ").append(toIndentedString(failures)).append("\n");
    sb.append("    migrateProjects: ").append(toIndentedString(migrateProjects)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("bulk_import_id");
    openapiFields.add("status");
    openapiFields.add("entity_type");
    openapiFields.add("source_full_path");
    openapiFields.add("destination_full_path");
    openapiFields.add("destination_name");
    openapiFields.add("destination_slug");
    openapiFields.add("destination_namespace");
    openapiFields.add("parent_id");
    openapiFields.add("namespace_id");
    openapiFields.add("project_id");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("failures");
    openapiFields.add("migrate_projects");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to APIEntitiesBulkImports
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!APIEntitiesBulkImports.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIEntitiesBulkImports is not found in the empty JSON string", APIEntitiesBulkImports.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("source_full_path") != null && !jsonObj.get("source_full_path").isJsonNull()) && !jsonObj.get("source_full_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_full_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_full_path").toString()));
      }
      if ((jsonObj.get("destination_full_path") != null && !jsonObj.get("destination_full_path").isJsonNull()) && !jsonObj.get("destination_full_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_full_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_full_path").toString()));
      }
      if ((jsonObj.get("destination_name") != null && !jsonObj.get("destination_name").isJsonNull()) && !jsonObj.get("destination_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_name").toString()));
      }
      if ((jsonObj.get("destination_slug") != null && !jsonObj.get("destination_slug").isJsonNull()) && !jsonObj.get("destination_slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_slug").toString()));
      }
      if ((jsonObj.get("destination_namespace") != null && !jsonObj.get("destination_namespace").isJsonNull()) && !jsonObj.get("destination_namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_namespace").toString()));
      }
      if (jsonObj.get("failures") != null && !jsonObj.get("failures").isJsonNull()) {
        JsonArray jsonArrayfailures = jsonObj.getAsJsonArray("failures");
        if (jsonArrayfailures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("failures").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `failures` to be an array in the JSON string but got `%s`", jsonObj.get("failures").toString()));
          }

          // validate the optional field `failures` (array)
          for (int i = 0; i < jsonArrayfailures.size(); i++) {
            APIEntitiesBulkImportsEntityFailure.validateJsonObject(jsonArrayfailures.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIEntitiesBulkImports.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIEntitiesBulkImports' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIEntitiesBulkImports> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIEntitiesBulkImports.class));

       return (TypeAdapter<T>) new TypeAdapter<APIEntitiesBulkImports>() {
           @Override
           public void write(JsonWriter out, APIEntitiesBulkImports value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public APIEntitiesBulkImports read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             APIEntitiesBulkImports instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of APIEntitiesBulkImports given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of APIEntitiesBulkImports
  * @throws IOException if the JSON string is invalid with respect to APIEntitiesBulkImports
  */
  public static APIEntitiesBulkImports fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIEntitiesBulkImports.class);
  }

 /**
  * Convert an instance of APIEntitiesBulkImports to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

