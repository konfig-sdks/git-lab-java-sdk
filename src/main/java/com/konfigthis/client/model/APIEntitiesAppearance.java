/*
 * GitLab API
 * An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * API_Entities_Appearance model
 */
@ApiModel(description = "API_Entities_Appearance model")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class APIEntitiesAppearance {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PWA_NAME = "pwa_name";
  @SerializedName(SERIALIZED_NAME_PWA_NAME)
  private String pwaName;

  public static final String SERIALIZED_NAME_PWA_SHORT_NAME = "pwa_short_name";
  @SerializedName(SERIALIZED_NAME_PWA_SHORT_NAME)
  private String pwaShortName;

  public static final String SERIALIZED_NAME_PWA_DESCRIPTION = "pwa_description";
  @SerializedName(SERIALIZED_NAME_PWA_DESCRIPTION)
  private String pwaDescription;

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private String logo;

  public static final String SERIALIZED_NAME_PWA_ICON = "pwa_icon";
  @SerializedName(SERIALIZED_NAME_PWA_ICON)
  private String pwaIcon;

  public static final String SERIALIZED_NAME_HEADER_LOGO = "header_logo";
  @SerializedName(SERIALIZED_NAME_HEADER_LOGO)
  private String headerLogo;

  public static final String SERIALIZED_NAME_FAVICON = "favicon";
  @SerializedName(SERIALIZED_NAME_FAVICON)
  private String favicon;

  public static final String SERIALIZED_NAME_NEW_PROJECT_GUIDELINES = "new_project_guidelines";
  @SerializedName(SERIALIZED_NAME_NEW_PROJECT_GUIDELINES)
  private String newProjectGuidelines;

  public static final String SERIALIZED_NAME_PROFILE_IMAGE_GUIDELINES = "profile_image_guidelines";
  @SerializedName(SERIALIZED_NAME_PROFILE_IMAGE_GUIDELINES)
  private String profileImageGuidelines;

  public static final String SERIALIZED_NAME_HEADER_MESSAGE = "header_message";
  @SerializedName(SERIALIZED_NAME_HEADER_MESSAGE)
  private String headerMessage;

  public static final String SERIALIZED_NAME_FOOTER_MESSAGE = "footer_message";
  @SerializedName(SERIALIZED_NAME_FOOTER_MESSAGE)
  private String footerMessage;

  public static final String SERIALIZED_NAME_MESSAGE_BACKGROUND_COLOR = "message_background_color";
  @SerializedName(SERIALIZED_NAME_MESSAGE_BACKGROUND_COLOR)
  private String messageBackgroundColor;

  public static final String SERIALIZED_NAME_MESSAGE_FONT_COLOR = "message_font_color";
  @SerializedName(SERIALIZED_NAME_MESSAGE_FONT_COLOR)
  private String messageFontColor;

  public static final String SERIALIZED_NAME_EMAIL_HEADER_AND_FOOTER_ENABLED = "email_header_and_footer_enabled";
  @SerializedName(SERIALIZED_NAME_EMAIL_HEADER_AND_FOOTER_ENABLED)
  private String emailHeaderAndFooterEnabled;

  public APIEntitiesAppearance() {
  }

  public APIEntitiesAppearance title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public APIEntitiesAppearance description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public APIEntitiesAppearance pwaName(String pwaName) {
    
    
    
    
    this.pwaName = pwaName;
    return this;
  }

   /**
   * Get pwaName
   * @return pwaName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPwaName() {
    return pwaName;
  }


  public void setPwaName(String pwaName) {
    
    
    
    this.pwaName = pwaName;
  }


  public APIEntitiesAppearance pwaShortName(String pwaShortName) {
    
    
    
    
    this.pwaShortName = pwaShortName;
    return this;
  }

   /**
   * Get pwaShortName
   * @return pwaShortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPwaShortName() {
    return pwaShortName;
  }


  public void setPwaShortName(String pwaShortName) {
    
    
    
    this.pwaShortName = pwaShortName;
  }


  public APIEntitiesAppearance pwaDescription(String pwaDescription) {
    
    
    
    
    this.pwaDescription = pwaDescription;
    return this;
  }

   /**
   * Get pwaDescription
   * @return pwaDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPwaDescription() {
    return pwaDescription;
  }


  public void setPwaDescription(String pwaDescription) {
    
    
    
    this.pwaDescription = pwaDescription;
  }


  public APIEntitiesAppearance logo(String logo) {
    
    
    
    
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogo() {
    return logo;
  }


  public void setLogo(String logo) {
    
    
    
    this.logo = logo;
  }


  public APIEntitiesAppearance pwaIcon(String pwaIcon) {
    
    
    
    
    this.pwaIcon = pwaIcon;
    return this;
  }

   /**
   * Get pwaIcon
   * @return pwaIcon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPwaIcon() {
    return pwaIcon;
  }


  public void setPwaIcon(String pwaIcon) {
    
    
    
    this.pwaIcon = pwaIcon;
  }


  public APIEntitiesAppearance headerLogo(String headerLogo) {
    
    
    
    
    this.headerLogo = headerLogo;
    return this;
  }

   /**
   * Get headerLogo
   * @return headerLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHeaderLogo() {
    return headerLogo;
  }


  public void setHeaderLogo(String headerLogo) {
    
    
    
    this.headerLogo = headerLogo;
  }


  public APIEntitiesAppearance favicon(String favicon) {
    
    
    
    
    this.favicon = favicon;
    return this;
  }

   /**
   * Get favicon
   * @return favicon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFavicon() {
    return favicon;
  }


  public void setFavicon(String favicon) {
    
    
    
    this.favicon = favicon;
  }


  public APIEntitiesAppearance newProjectGuidelines(String newProjectGuidelines) {
    
    
    
    
    this.newProjectGuidelines = newProjectGuidelines;
    return this;
  }

   /**
   * Get newProjectGuidelines
   * @return newProjectGuidelines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNewProjectGuidelines() {
    return newProjectGuidelines;
  }


  public void setNewProjectGuidelines(String newProjectGuidelines) {
    
    
    
    this.newProjectGuidelines = newProjectGuidelines;
  }


  public APIEntitiesAppearance profileImageGuidelines(String profileImageGuidelines) {
    
    
    
    
    this.profileImageGuidelines = profileImageGuidelines;
    return this;
  }

   /**
   * Get profileImageGuidelines
   * @return profileImageGuidelines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProfileImageGuidelines() {
    return profileImageGuidelines;
  }


  public void setProfileImageGuidelines(String profileImageGuidelines) {
    
    
    
    this.profileImageGuidelines = profileImageGuidelines;
  }


  public APIEntitiesAppearance headerMessage(String headerMessage) {
    
    
    
    
    this.headerMessage = headerMessage;
    return this;
  }

   /**
   * Get headerMessage
   * @return headerMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHeaderMessage() {
    return headerMessage;
  }


  public void setHeaderMessage(String headerMessage) {
    
    
    
    this.headerMessage = headerMessage;
  }


  public APIEntitiesAppearance footerMessage(String footerMessage) {
    
    
    
    
    this.footerMessage = footerMessage;
    return this;
  }

   /**
   * Get footerMessage
   * @return footerMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFooterMessage() {
    return footerMessage;
  }


  public void setFooterMessage(String footerMessage) {
    
    
    
    this.footerMessage = footerMessage;
  }


  public APIEntitiesAppearance messageBackgroundColor(String messageBackgroundColor) {
    
    
    
    
    this.messageBackgroundColor = messageBackgroundColor;
    return this;
  }

   /**
   * Get messageBackgroundColor
   * @return messageBackgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageBackgroundColor() {
    return messageBackgroundColor;
  }


  public void setMessageBackgroundColor(String messageBackgroundColor) {
    
    
    
    this.messageBackgroundColor = messageBackgroundColor;
  }


  public APIEntitiesAppearance messageFontColor(String messageFontColor) {
    
    
    
    
    this.messageFontColor = messageFontColor;
    return this;
  }

   /**
   * Get messageFontColor
   * @return messageFontColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageFontColor() {
    return messageFontColor;
  }


  public void setMessageFontColor(String messageFontColor) {
    
    
    
    this.messageFontColor = messageFontColor;
  }


  public APIEntitiesAppearance emailHeaderAndFooterEnabled(String emailHeaderAndFooterEnabled) {
    
    
    
    
    this.emailHeaderAndFooterEnabled = emailHeaderAndFooterEnabled;
    return this;
  }

   /**
   * Get emailHeaderAndFooterEnabled
   * @return emailHeaderAndFooterEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailHeaderAndFooterEnabled() {
    return emailHeaderAndFooterEnabled;
  }


  public void setEmailHeaderAndFooterEnabled(String emailHeaderAndFooterEnabled) {
    
    
    
    this.emailHeaderAndFooterEnabled = emailHeaderAndFooterEnabled;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the APIEntitiesAppearance instance itself
   */
  public APIEntitiesAppearance putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIEntitiesAppearance apIEntitiesAppearance = (APIEntitiesAppearance) o;
    return Objects.equals(this.title, apIEntitiesAppearance.title) &&
        Objects.equals(this.description, apIEntitiesAppearance.description) &&
        Objects.equals(this.pwaName, apIEntitiesAppearance.pwaName) &&
        Objects.equals(this.pwaShortName, apIEntitiesAppearance.pwaShortName) &&
        Objects.equals(this.pwaDescription, apIEntitiesAppearance.pwaDescription) &&
        Objects.equals(this.logo, apIEntitiesAppearance.logo) &&
        Objects.equals(this.pwaIcon, apIEntitiesAppearance.pwaIcon) &&
        Objects.equals(this.headerLogo, apIEntitiesAppearance.headerLogo) &&
        Objects.equals(this.favicon, apIEntitiesAppearance.favicon) &&
        Objects.equals(this.newProjectGuidelines, apIEntitiesAppearance.newProjectGuidelines) &&
        Objects.equals(this.profileImageGuidelines, apIEntitiesAppearance.profileImageGuidelines) &&
        Objects.equals(this.headerMessage, apIEntitiesAppearance.headerMessage) &&
        Objects.equals(this.footerMessage, apIEntitiesAppearance.footerMessage) &&
        Objects.equals(this.messageBackgroundColor, apIEntitiesAppearance.messageBackgroundColor) &&
        Objects.equals(this.messageFontColor, apIEntitiesAppearance.messageFontColor) &&
        Objects.equals(this.emailHeaderAndFooterEnabled, apIEntitiesAppearance.emailHeaderAndFooterEnabled)&&
        Objects.equals(this.additionalProperties, apIEntitiesAppearance.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, pwaName, pwaShortName, pwaDescription, logo, pwaIcon, headerLogo, favicon, newProjectGuidelines, profileImageGuidelines, headerMessage, footerMessage, messageBackgroundColor, messageFontColor, emailHeaderAndFooterEnabled, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIEntitiesAppearance {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    pwaName: ").append(toIndentedString(pwaName)).append("\n");
    sb.append("    pwaShortName: ").append(toIndentedString(pwaShortName)).append("\n");
    sb.append("    pwaDescription: ").append(toIndentedString(pwaDescription)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    pwaIcon: ").append(toIndentedString(pwaIcon)).append("\n");
    sb.append("    headerLogo: ").append(toIndentedString(headerLogo)).append("\n");
    sb.append("    favicon: ").append(toIndentedString(favicon)).append("\n");
    sb.append("    newProjectGuidelines: ").append(toIndentedString(newProjectGuidelines)).append("\n");
    sb.append("    profileImageGuidelines: ").append(toIndentedString(profileImageGuidelines)).append("\n");
    sb.append("    headerMessage: ").append(toIndentedString(headerMessage)).append("\n");
    sb.append("    footerMessage: ").append(toIndentedString(footerMessage)).append("\n");
    sb.append("    messageBackgroundColor: ").append(toIndentedString(messageBackgroundColor)).append("\n");
    sb.append("    messageFontColor: ").append(toIndentedString(messageFontColor)).append("\n");
    sb.append("    emailHeaderAndFooterEnabled: ").append(toIndentedString(emailHeaderAndFooterEnabled)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("pwa_name");
    openapiFields.add("pwa_short_name");
    openapiFields.add("pwa_description");
    openapiFields.add("logo");
    openapiFields.add("pwa_icon");
    openapiFields.add("header_logo");
    openapiFields.add("favicon");
    openapiFields.add("new_project_guidelines");
    openapiFields.add("profile_image_guidelines");
    openapiFields.add("header_message");
    openapiFields.add("footer_message");
    openapiFields.add("message_background_color");
    openapiFields.add("message_font_color");
    openapiFields.add("email_header_and_footer_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to APIEntitiesAppearance
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!APIEntitiesAppearance.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIEntitiesAppearance is not found in the empty JSON string", APIEntitiesAppearance.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("pwa_name") != null && !jsonObj.get("pwa_name").isJsonNull()) && !jsonObj.get("pwa_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pwa_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pwa_name").toString()));
      }
      if ((jsonObj.get("pwa_short_name") != null && !jsonObj.get("pwa_short_name").isJsonNull()) && !jsonObj.get("pwa_short_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pwa_short_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pwa_short_name").toString()));
      }
      if ((jsonObj.get("pwa_description") != null && !jsonObj.get("pwa_description").isJsonNull()) && !jsonObj.get("pwa_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pwa_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pwa_description").toString()));
      }
      if ((jsonObj.get("logo") != null && !jsonObj.get("logo").isJsonNull()) && !jsonObj.get("logo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo").toString()));
      }
      if ((jsonObj.get("pwa_icon") != null && !jsonObj.get("pwa_icon").isJsonNull()) && !jsonObj.get("pwa_icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pwa_icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pwa_icon").toString()));
      }
      if ((jsonObj.get("header_logo") != null && !jsonObj.get("header_logo").isJsonNull()) && !jsonObj.get("header_logo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header_logo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header_logo").toString()));
      }
      if ((jsonObj.get("favicon") != null && !jsonObj.get("favicon").isJsonNull()) && !jsonObj.get("favicon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `favicon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("favicon").toString()));
      }
      if ((jsonObj.get("new_project_guidelines") != null && !jsonObj.get("new_project_guidelines").isJsonNull()) && !jsonObj.get("new_project_guidelines").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_project_guidelines` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_project_guidelines").toString()));
      }
      if ((jsonObj.get("profile_image_guidelines") != null && !jsonObj.get("profile_image_guidelines").isJsonNull()) && !jsonObj.get("profile_image_guidelines").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_image_guidelines` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_image_guidelines").toString()));
      }
      if ((jsonObj.get("header_message") != null && !jsonObj.get("header_message").isJsonNull()) && !jsonObj.get("header_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header_message").toString()));
      }
      if ((jsonObj.get("footer_message") != null && !jsonObj.get("footer_message").isJsonNull()) && !jsonObj.get("footer_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_message").toString()));
      }
      if ((jsonObj.get("message_background_color") != null && !jsonObj.get("message_background_color").isJsonNull()) && !jsonObj.get("message_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_background_color").toString()));
      }
      if ((jsonObj.get("message_font_color") != null && !jsonObj.get("message_font_color").isJsonNull()) && !jsonObj.get("message_font_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_font_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_font_color").toString()));
      }
      if ((jsonObj.get("email_header_and_footer_enabled") != null && !jsonObj.get("email_header_and_footer_enabled").isJsonNull()) && !jsonObj.get("email_header_and_footer_enabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_header_and_footer_enabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_header_and_footer_enabled").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIEntitiesAppearance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIEntitiesAppearance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIEntitiesAppearance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIEntitiesAppearance.class));

       return (TypeAdapter<T>) new TypeAdapter<APIEntitiesAppearance>() {
           @Override
           public void write(JsonWriter out, APIEntitiesAppearance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public APIEntitiesAppearance read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             APIEntitiesAppearance instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of APIEntitiesAppearance given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of APIEntitiesAppearance
  * @throws IOException if the JSON string is invalid with respect to APIEntitiesAppearance
  */
  public static APIEntitiesAppearance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIEntitiesAppearance.class);
  }

 /**
  * Convert an instance of APIEntitiesAppearance to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

