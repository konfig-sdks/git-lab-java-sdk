/*
 * GitLab API
 * An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PlanlimitsModifyLimitsRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PlanlimitsModifyLimitsRequest {
  /**
   * Name of the plan to update
   */
  @JsonAdapter(PlanNameEnum.Adapter.class)
 public enum PlanNameEnum {
    DEFAULT("default"),
    
    FREE("free"),
    
    BRONZE("bronze"),
    
    SILVER("silver"),
    
    PREMIUM("premium"),
    
    GOLD("gold"),
    
    ULTIMATE("ultimate"),
    
    ULTIMATE_TRIAL("ultimate_trial"),
    
    PREMIUM_TRIAL("premium_trial"),
    
    OPENSOURCE("opensource");

    private String value;

    PlanNameEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlanNameEnum fromValue(String value) {
      for (PlanNameEnum b : PlanNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlanNameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlanNameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlanNameEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlanNameEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PLAN_NAME = "plan_name";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME)
  private PlanNameEnum planName;

  public static final String SERIALIZED_NAME_CI_PIPELINE_SIZE = "ci_pipeline_size";
  @SerializedName(SERIALIZED_NAME_CI_PIPELINE_SIZE)
  private Integer ciPipelineSize;

  public static final String SERIALIZED_NAME_CI_ACTIVE_JOBS = "ci_active_jobs";
  @SerializedName(SERIALIZED_NAME_CI_ACTIVE_JOBS)
  private Integer ciActiveJobs;

  public static final String SERIALIZED_NAME_CI_PROJECT_SUBSCRIPTIONS = "ci_project_subscriptions";
  @SerializedName(SERIALIZED_NAME_CI_PROJECT_SUBSCRIPTIONS)
  private Integer ciProjectSubscriptions;

  public static final String SERIALIZED_NAME_CI_PIPELINE_SCHEDULES = "ci_pipeline_schedules";
  @SerializedName(SERIALIZED_NAME_CI_PIPELINE_SCHEDULES)
  private Integer ciPipelineSchedules;

  public static final String SERIALIZED_NAME_CI_NEEDS_SIZE_LIMIT = "ci_needs_size_limit";
  @SerializedName(SERIALIZED_NAME_CI_NEEDS_SIZE_LIMIT)
  private Integer ciNeedsSizeLimit;

  public static final String SERIALIZED_NAME_CI_REGISTERED_GROUP_RUNNERS = "ci_registered_group_runners";
  @SerializedName(SERIALIZED_NAME_CI_REGISTERED_GROUP_RUNNERS)
  private Integer ciRegisteredGroupRunners;

  public static final String SERIALIZED_NAME_CI_REGISTERED_PROJECT_RUNNERS = "ci_registered_project_runners";
  @SerializedName(SERIALIZED_NAME_CI_REGISTERED_PROJECT_RUNNERS)
  private Integer ciRegisteredProjectRunners;

  public static final String SERIALIZED_NAME_CONAN_MAX_FILE_SIZE = "conan_max_file_size";
  @SerializedName(SERIALIZED_NAME_CONAN_MAX_FILE_SIZE)
  private Integer conanMaxFileSize;

  public static final String SERIALIZED_NAME_ENFORCEMENT_LIMIT = "enforcement_limit";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_LIMIT)
  private Integer enforcementLimit;

  public static final String SERIALIZED_NAME_GENERIC_PACKAGES_MAX_FILE_SIZE = "generic_packages_max_file_size";
  @SerializedName(SERIALIZED_NAME_GENERIC_PACKAGES_MAX_FILE_SIZE)
  private Integer genericPackagesMaxFileSize;

  public static final String SERIALIZED_NAME_HELM_MAX_FILE_SIZE = "helm_max_file_size";
  @SerializedName(SERIALIZED_NAME_HELM_MAX_FILE_SIZE)
  private Integer helmMaxFileSize;

  public static final String SERIALIZED_NAME_MAVEN_MAX_FILE_SIZE = "maven_max_file_size";
  @SerializedName(SERIALIZED_NAME_MAVEN_MAX_FILE_SIZE)
  private Integer mavenMaxFileSize;

  public static final String SERIALIZED_NAME_NOTIFICATION_LIMIT = "notification_limit";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LIMIT)
  private Integer notificationLimit;

  public static final String SERIALIZED_NAME_NPM_MAX_FILE_SIZE = "npm_max_file_size";
  @SerializedName(SERIALIZED_NAME_NPM_MAX_FILE_SIZE)
  private Integer npmMaxFileSize;

  public static final String SERIALIZED_NAME_NUGET_MAX_FILE_SIZE = "nuget_max_file_size";
  @SerializedName(SERIALIZED_NAME_NUGET_MAX_FILE_SIZE)
  private Integer nugetMaxFileSize;

  public static final String SERIALIZED_NAME_PYPI_MAX_FILE_SIZE = "pypi_max_file_size";
  @SerializedName(SERIALIZED_NAME_PYPI_MAX_FILE_SIZE)
  private Integer pypiMaxFileSize;

  public static final String SERIALIZED_NAME_TERRAFORM_MODULE_MAX_FILE_SIZE = "terraform_module_max_file_size";
  @SerializedName(SERIALIZED_NAME_TERRAFORM_MODULE_MAX_FILE_SIZE)
  private Integer terraformModuleMaxFileSize;

  public static final String SERIALIZED_NAME_STORAGE_SIZE_LIMIT = "storage_size_limit";
  @SerializedName(SERIALIZED_NAME_STORAGE_SIZE_LIMIT)
  private Integer storageSizeLimit;

  public static final String SERIALIZED_NAME_PIPELINE_HIERARCHY_SIZE = "pipeline_hierarchy_size";
  @SerializedName(SERIALIZED_NAME_PIPELINE_HIERARCHY_SIZE)
  private Integer pipelineHierarchySize;

  public PlanlimitsModifyLimitsRequest() {
  }

  public PlanlimitsModifyLimitsRequest planName(PlanNameEnum planName) {
    
    
    
    
    this.planName = planName;
    return this;
  }

   /**
   * Name of the plan to update
   * @return planName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the plan to update")

  public PlanNameEnum getPlanName() {
    return planName;
  }


  public void setPlanName(PlanNameEnum planName) {
    
    
    
    this.planName = planName;
  }


  public PlanlimitsModifyLimitsRequest ciPipelineSize(Integer ciPipelineSize) {
    
    
    
    
    this.ciPipelineSize = ciPipelineSize;
    return this;
  }

   /**
   * Maximum number of jobs in a single pipeline
   * @return ciPipelineSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of jobs in a single pipeline")

  public Integer getCiPipelineSize() {
    return ciPipelineSize;
  }


  public void setCiPipelineSize(Integer ciPipelineSize) {
    
    
    
    this.ciPipelineSize = ciPipelineSize;
  }


  public PlanlimitsModifyLimitsRequest ciActiveJobs(Integer ciActiveJobs) {
    
    
    
    
    this.ciActiveJobs = ciActiveJobs;
    return this;
  }

   /**
   * Total number of jobs in currently active pipelines
   * @return ciActiveJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of jobs in currently active pipelines")

  public Integer getCiActiveJobs() {
    return ciActiveJobs;
  }


  public void setCiActiveJobs(Integer ciActiveJobs) {
    
    
    
    this.ciActiveJobs = ciActiveJobs;
  }


  public PlanlimitsModifyLimitsRequest ciProjectSubscriptions(Integer ciProjectSubscriptions) {
    
    
    
    
    this.ciProjectSubscriptions = ciProjectSubscriptions;
    return this;
  }

   /**
   * Maximum number of pipeline subscriptions to and from a project
   * @return ciProjectSubscriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of pipeline subscriptions to and from a project")

  public Integer getCiProjectSubscriptions() {
    return ciProjectSubscriptions;
  }


  public void setCiProjectSubscriptions(Integer ciProjectSubscriptions) {
    
    
    
    this.ciProjectSubscriptions = ciProjectSubscriptions;
  }


  public PlanlimitsModifyLimitsRequest ciPipelineSchedules(Integer ciPipelineSchedules) {
    
    
    
    
    this.ciPipelineSchedules = ciPipelineSchedules;
    return this;
  }

   /**
   * Maximum number of pipeline schedules
   * @return ciPipelineSchedules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of pipeline schedules")

  public Integer getCiPipelineSchedules() {
    return ciPipelineSchedules;
  }


  public void setCiPipelineSchedules(Integer ciPipelineSchedules) {
    
    
    
    this.ciPipelineSchedules = ciPipelineSchedules;
  }


  public PlanlimitsModifyLimitsRequest ciNeedsSizeLimit(Integer ciNeedsSizeLimit) {
    
    
    
    
    this.ciNeedsSizeLimit = ciNeedsSizeLimit;
    return this;
  }

   /**
   * Maximum number of DAG dependencies that a job can have
   * @return ciNeedsSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of DAG dependencies that a job can have")

  public Integer getCiNeedsSizeLimit() {
    return ciNeedsSizeLimit;
  }


  public void setCiNeedsSizeLimit(Integer ciNeedsSizeLimit) {
    
    
    
    this.ciNeedsSizeLimit = ciNeedsSizeLimit;
  }


  public PlanlimitsModifyLimitsRequest ciRegisteredGroupRunners(Integer ciRegisteredGroupRunners) {
    
    
    
    
    this.ciRegisteredGroupRunners = ciRegisteredGroupRunners;
    return this;
  }

   /**
   * Maximum number of runners registered per group
   * @return ciRegisteredGroupRunners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of runners registered per group")

  public Integer getCiRegisteredGroupRunners() {
    return ciRegisteredGroupRunners;
  }


  public void setCiRegisteredGroupRunners(Integer ciRegisteredGroupRunners) {
    
    
    
    this.ciRegisteredGroupRunners = ciRegisteredGroupRunners;
  }


  public PlanlimitsModifyLimitsRequest ciRegisteredProjectRunners(Integer ciRegisteredProjectRunners) {
    
    
    
    
    this.ciRegisteredProjectRunners = ciRegisteredProjectRunners;
    return this;
  }

   /**
   * Maximum number of runners registered per project
   * @return ciRegisteredProjectRunners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of runners registered per project")

  public Integer getCiRegisteredProjectRunners() {
    return ciRegisteredProjectRunners;
  }


  public void setCiRegisteredProjectRunners(Integer ciRegisteredProjectRunners) {
    
    
    
    this.ciRegisteredProjectRunners = ciRegisteredProjectRunners;
  }


  public PlanlimitsModifyLimitsRequest conanMaxFileSize(Integer conanMaxFileSize) {
    
    
    
    
    this.conanMaxFileSize = conanMaxFileSize;
    return this;
  }

   /**
   * Maximum Conan package file size in bytes
   * @return conanMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum Conan package file size in bytes")

  public Integer getConanMaxFileSize() {
    return conanMaxFileSize;
  }


  public void setConanMaxFileSize(Integer conanMaxFileSize) {
    
    
    
    this.conanMaxFileSize = conanMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest enforcementLimit(Integer enforcementLimit) {
    
    
    
    
    this.enforcementLimit = enforcementLimit;
    return this;
  }

   /**
   * Maximum storage size for the root namespace enforcement in MiB
   * @return enforcementLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum storage size for the root namespace enforcement in MiB")

  public Integer getEnforcementLimit() {
    return enforcementLimit;
  }


  public void setEnforcementLimit(Integer enforcementLimit) {
    
    
    
    this.enforcementLimit = enforcementLimit;
  }


  public PlanlimitsModifyLimitsRequest genericPackagesMaxFileSize(Integer genericPackagesMaxFileSize) {
    
    
    
    
    this.genericPackagesMaxFileSize = genericPackagesMaxFileSize;
    return this;
  }

   /**
   * Maximum generic package file size in bytes
   * @return genericPackagesMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum generic package file size in bytes")

  public Integer getGenericPackagesMaxFileSize() {
    return genericPackagesMaxFileSize;
  }


  public void setGenericPackagesMaxFileSize(Integer genericPackagesMaxFileSize) {
    
    
    
    this.genericPackagesMaxFileSize = genericPackagesMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest helmMaxFileSize(Integer helmMaxFileSize) {
    
    
    
    
    this.helmMaxFileSize = helmMaxFileSize;
    return this;
  }

   /**
   * Maximum Helm chart file size in bytes
   * @return helmMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum Helm chart file size in bytes")

  public Integer getHelmMaxFileSize() {
    return helmMaxFileSize;
  }


  public void setHelmMaxFileSize(Integer helmMaxFileSize) {
    
    
    
    this.helmMaxFileSize = helmMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest mavenMaxFileSize(Integer mavenMaxFileSize) {
    
    
    
    
    this.mavenMaxFileSize = mavenMaxFileSize;
    return this;
  }

   /**
   * Maximum Maven package file size in bytes
   * @return mavenMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum Maven package file size in bytes")

  public Integer getMavenMaxFileSize() {
    return mavenMaxFileSize;
  }


  public void setMavenMaxFileSize(Integer mavenMaxFileSize) {
    
    
    
    this.mavenMaxFileSize = mavenMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest notificationLimit(Integer notificationLimit) {
    
    
    
    
    this.notificationLimit = notificationLimit;
    return this;
  }

   /**
   * Maximum storage size for the root namespace notifications in MiB
   * @return notificationLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum storage size for the root namespace notifications in MiB")

  public Integer getNotificationLimit() {
    return notificationLimit;
  }


  public void setNotificationLimit(Integer notificationLimit) {
    
    
    
    this.notificationLimit = notificationLimit;
  }


  public PlanlimitsModifyLimitsRequest npmMaxFileSize(Integer npmMaxFileSize) {
    
    
    
    
    this.npmMaxFileSize = npmMaxFileSize;
    return this;
  }

   /**
   * Maximum NPM package file size in bytes
   * @return npmMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum NPM package file size in bytes")

  public Integer getNpmMaxFileSize() {
    return npmMaxFileSize;
  }


  public void setNpmMaxFileSize(Integer npmMaxFileSize) {
    
    
    
    this.npmMaxFileSize = npmMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest nugetMaxFileSize(Integer nugetMaxFileSize) {
    
    
    
    
    this.nugetMaxFileSize = nugetMaxFileSize;
    return this;
  }

   /**
   * Maximum NuGet package file size in bytes
   * @return nugetMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum NuGet package file size in bytes")

  public Integer getNugetMaxFileSize() {
    return nugetMaxFileSize;
  }


  public void setNugetMaxFileSize(Integer nugetMaxFileSize) {
    
    
    
    this.nugetMaxFileSize = nugetMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest pypiMaxFileSize(Integer pypiMaxFileSize) {
    
    
    
    
    this.pypiMaxFileSize = pypiMaxFileSize;
    return this;
  }

   /**
   * Maximum PyPI package file size in bytes
   * @return pypiMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum PyPI package file size in bytes")

  public Integer getPypiMaxFileSize() {
    return pypiMaxFileSize;
  }


  public void setPypiMaxFileSize(Integer pypiMaxFileSize) {
    
    
    
    this.pypiMaxFileSize = pypiMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest terraformModuleMaxFileSize(Integer terraformModuleMaxFileSize) {
    
    
    
    
    this.terraformModuleMaxFileSize = terraformModuleMaxFileSize;
    return this;
  }

   /**
   * Maximum Terraform Module package file size in bytes
   * @return terraformModuleMaxFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum Terraform Module package file size in bytes")

  public Integer getTerraformModuleMaxFileSize() {
    return terraformModuleMaxFileSize;
  }


  public void setTerraformModuleMaxFileSize(Integer terraformModuleMaxFileSize) {
    
    
    
    this.terraformModuleMaxFileSize = terraformModuleMaxFileSize;
  }


  public PlanlimitsModifyLimitsRequest storageSizeLimit(Integer storageSizeLimit) {
    
    
    
    
    this.storageSizeLimit = storageSizeLimit;
    return this;
  }

   /**
   * Maximum storage size for the root namespace in MiB
   * @return storageSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum storage size for the root namespace in MiB")

  public Integer getStorageSizeLimit() {
    return storageSizeLimit;
  }


  public void setStorageSizeLimit(Integer storageSizeLimit) {
    
    
    
    this.storageSizeLimit = storageSizeLimit;
  }


  public PlanlimitsModifyLimitsRequest pipelineHierarchySize(Integer pipelineHierarchySize) {
    
    
    
    
    this.pipelineHierarchySize = pipelineHierarchySize;
    return this;
  }

   /**
   * Maximum number of downstream pipelines in a pipeline&#39;s hierarchy tree
   * @return pipelineHierarchySize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of downstream pipelines in a pipeline's hierarchy tree")

  public Integer getPipelineHierarchySize() {
    return pipelineHierarchySize;
  }


  public void setPipelineHierarchySize(Integer pipelineHierarchySize) {
    
    
    
    this.pipelineHierarchySize = pipelineHierarchySize;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PlanlimitsModifyLimitsRequest instance itself
   */
  public PlanlimitsModifyLimitsRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlanlimitsModifyLimitsRequest planlimitsModifyLimitsRequest = (PlanlimitsModifyLimitsRequest) o;
    return Objects.equals(this.planName, planlimitsModifyLimitsRequest.planName) &&
        Objects.equals(this.ciPipelineSize, planlimitsModifyLimitsRequest.ciPipelineSize) &&
        Objects.equals(this.ciActiveJobs, planlimitsModifyLimitsRequest.ciActiveJobs) &&
        Objects.equals(this.ciProjectSubscriptions, planlimitsModifyLimitsRequest.ciProjectSubscriptions) &&
        Objects.equals(this.ciPipelineSchedules, planlimitsModifyLimitsRequest.ciPipelineSchedules) &&
        Objects.equals(this.ciNeedsSizeLimit, planlimitsModifyLimitsRequest.ciNeedsSizeLimit) &&
        Objects.equals(this.ciRegisteredGroupRunners, planlimitsModifyLimitsRequest.ciRegisteredGroupRunners) &&
        Objects.equals(this.ciRegisteredProjectRunners, planlimitsModifyLimitsRequest.ciRegisteredProjectRunners) &&
        Objects.equals(this.conanMaxFileSize, planlimitsModifyLimitsRequest.conanMaxFileSize) &&
        Objects.equals(this.enforcementLimit, planlimitsModifyLimitsRequest.enforcementLimit) &&
        Objects.equals(this.genericPackagesMaxFileSize, planlimitsModifyLimitsRequest.genericPackagesMaxFileSize) &&
        Objects.equals(this.helmMaxFileSize, planlimitsModifyLimitsRequest.helmMaxFileSize) &&
        Objects.equals(this.mavenMaxFileSize, planlimitsModifyLimitsRequest.mavenMaxFileSize) &&
        Objects.equals(this.notificationLimit, planlimitsModifyLimitsRequest.notificationLimit) &&
        Objects.equals(this.npmMaxFileSize, planlimitsModifyLimitsRequest.npmMaxFileSize) &&
        Objects.equals(this.nugetMaxFileSize, planlimitsModifyLimitsRequest.nugetMaxFileSize) &&
        Objects.equals(this.pypiMaxFileSize, planlimitsModifyLimitsRequest.pypiMaxFileSize) &&
        Objects.equals(this.terraformModuleMaxFileSize, planlimitsModifyLimitsRequest.terraformModuleMaxFileSize) &&
        Objects.equals(this.storageSizeLimit, planlimitsModifyLimitsRequest.storageSizeLimit) &&
        Objects.equals(this.pipelineHierarchySize, planlimitsModifyLimitsRequest.pipelineHierarchySize)&&
        Objects.equals(this.additionalProperties, planlimitsModifyLimitsRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(planName, ciPipelineSize, ciActiveJobs, ciProjectSubscriptions, ciPipelineSchedules, ciNeedsSizeLimit, ciRegisteredGroupRunners, ciRegisteredProjectRunners, conanMaxFileSize, enforcementLimit, genericPackagesMaxFileSize, helmMaxFileSize, mavenMaxFileSize, notificationLimit, npmMaxFileSize, nugetMaxFileSize, pypiMaxFileSize, terraformModuleMaxFileSize, storageSizeLimit, pipelineHierarchySize, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlanlimitsModifyLimitsRequest {\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    ciPipelineSize: ").append(toIndentedString(ciPipelineSize)).append("\n");
    sb.append("    ciActiveJobs: ").append(toIndentedString(ciActiveJobs)).append("\n");
    sb.append("    ciProjectSubscriptions: ").append(toIndentedString(ciProjectSubscriptions)).append("\n");
    sb.append("    ciPipelineSchedules: ").append(toIndentedString(ciPipelineSchedules)).append("\n");
    sb.append("    ciNeedsSizeLimit: ").append(toIndentedString(ciNeedsSizeLimit)).append("\n");
    sb.append("    ciRegisteredGroupRunners: ").append(toIndentedString(ciRegisteredGroupRunners)).append("\n");
    sb.append("    ciRegisteredProjectRunners: ").append(toIndentedString(ciRegisteredProjectRunners)).append("\n");
    sb.append("    conanMaxFileSize: ").append(toIndentedString(conanMaxFileSize)).append("\n");
    sb.append("    enforcementLimit: ").append(toIndentedString(enforcementLimit)).append("\n");
    sb.append("    genericPackagesMaxFileSize: ").append(toIndentedString(genericPackagesMaxFileSize)).append("\n");
    sb.append("    helmMaxFileSize: ").append(toIndentedString(helmMaxFileSize)).append("\n");
    sb.append("    mavenMaxFileSize: ").append(toIndentedString(mavenMaxFileSize)).append("\n");
    sb.append("    notificationLimit: ").append(toIndentedString(notificationLimit)).append("\n");
    sb.append("    npmMaxFileSize: ").append(toIndentedString(npmMaxFileSize)).append("\n");
    sb.append("    nugetMaxFileSize: ").append(toIndentedString(nugetMaxFileSize)).append("\n");
    sb.append("    pypiMaxFileSize: ").append(toIndentedString(pypiMaxFileSize)).append("\n");
    sb.append("    terraformModuleMaxFileSize: ").append(toIndentedString(terraformModuleMaxFileSize)).append("\n");
    sb.append("    storageSizeLimit: ").append(toIndentedString(storageSizeLimit)).append("\n");
    sb.append("    pipelineHierarchySize: ").append(toIndentedString(pipelineHierarchySize)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("plan_name");
    openapiFields.add("ci_pipeline_size");
    openapiFields.add("ci_active_jobs");
    openapiFields.add("ci_project_subscriptions");
    openapiFields.add("ci_pipeline_schedules");
    openapiFields.add("ci_needs_size_limit");
    openapiFields.add("ci_registered_group_runners");
    openapiFields.add("ci_registered_project_runners");
    openapiFields.add("conan_max_file_size");
    openapiFields.add("enforcement_limit");
    openapiFields.add("generic_packages_max_file_size");
    openapiFields.add("helm_max_file_size");
    openapiFields.add("maven_max_file_size");
    openapiFields.add("notification_limit");
    openapiFields.add("npm_max_file_size");
    openapiFields.add("nuget_max_file_size");
    openapiFields.add("pypi_max_file_size");
    openapiFields.add("terraform_module_max_file_size");
    openapiFields.add("storage_size_limit");
    openapiFields.add("pipeline_hierarchy_size");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("plan_name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PlanlimitsModifyLimitsRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PlanlimitsModifyLimitsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlanlimitsModifyLimitsRequest is not found in the empty JSON string", PlanlimitsModifyLimitsRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PlanlimitsModifyLimitsRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("plan_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlanlimitsModifyLimitsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlanlimitsModifyLimitsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlanlimitsModifyLimitsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlanlimitsModifyLimitsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PlanlimitsModifyLimitsRequest>() {
           @Override
           public void write(JsonWriter out, PlanlimitsModifyLimitsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PlanlimitsModifyLimitsRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PlanlimitsModifyLimitsRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PlanlimitsModifyLimitsRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PlanlimitsModifyLimitsRequest
  * @throws IOException if the JSON string is invalid with respect to PlanlimitsModifyLimitsRequest
  */
  public static PlanlimitsModifyLimitsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlanlimitsModifyLimitsRequest.class);
  }

 /**
  * Convert an instance of PlanlimitsModifyLimitsRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

