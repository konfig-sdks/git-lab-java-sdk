/*
 * GitLab API
 * An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ClustersAddExistingKubernetesInstanceClusterRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ClustersAddExistingKubernetesInstanceClusterRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;

  public static final String SERIALIZED_NAME_ENVIRONMENT_SCOPE = "environment_scope";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_SCOPE)
  private String environmentScope = "*";

  public static final String SERIALIZED_NAME_NAMESPACE_PER_ENVIRONMENT = "namespace_per_environment";
  @SerializedName(SERIALIZED_NAME_NAMESPACE_PER_ENVIRONMENT)
  private Boolean namespacePerEnvironment = true;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_MANAGEMENT_PROJECT_ID = "management_project_id";
  @SerializedName(SERIALIZED_NAME_MANAGEMENT_PROJECT_ID)
  private Integer managementProjectId;

  public static final String SERIALIZED_NAME_MANAGED = "managed";
  @SerializedName(SERIALIZED_NAME_MANAGED)
  private Boolean managed = true;

  public static final String SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_API_URL = "platform_kubernetes_attributes[api_url]";
  @SerializedName(SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_API_URL)
  private String platformKubernetesAttributesApiUrl;

  public static final String SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_TOKEN = "platform_kubernetes_attributes[token]";
  @SerializedName(SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_TOKEN)
  private String platformKubernetesAttributesToken;

  public static final String SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_CA_CERT = "platform_kubernetes_attributes[ca_cert]";
  @SerializedName(SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_CA_CERT)
  private String platformKubernetesAttributesCaCert;

  public static final String SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_NAMESPACE = "platform_kubernetes_attributes[namespace]";
  @SerializedName(SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_NAMESPACE)
  private String platformKubernetesAttributesNamespace;

  /**
   * Cluster authorization type, defaults to RBAC
   */
  @JsonAdapter(PlatformKubernetesAttributesAuthorizationTypeEnum.Adapter.class)
 public enum PlatformKubernetesAttributesAuthorizationTypeEnum {
    UNKNOWN_AUTHORIZATION("unknown_authorization"),
    
    RBAC("rbac"),
    
    ABAC("abac");

    private String value;

    PlatformKubernetesAttributesAuthorizationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlatformKubernetesAttributesAuthorizationTypeEnum fromValue(String value) {
      for (PlatformKubernetesAttributesAuthorizationTypeEnum b : PlatformKubernetesAttributesAuthorizationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlatformKubernetesAttributesAuthorizationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformKubernetesAttributesAuthorizationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlatformKubernetesAttributesAuthorizationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlatformKubernetesAttributesAuthorizationTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_AUTHORIZATION_TYPE = "platform_kubernetes_attributes[authorization_type]";
  @SerializedName(SERIALIZED_NAME_PLATFORM_KUBERNETES_ATTRIBUTES_AUTHORIZATION_TYPE)
  private PlatformKubernetesAttributesAuthorizationTypeEnum platformKubernetesAttributesAuthorizationType = PlatformKubernetesAttributesAuthorizationTypeEnum.RBAC;

  public ClustersAddExistingKubernetesInstanceClusterRequest() {
  }

  public ClustersAddExistingKubernetesInstanceClusterRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Cluster name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Cluster name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Determines if cluster is active or not, defaults to true
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Determines if cluster is active or not, defaults to true")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest environmentScope(String environmentScope) {
    
    
    
    
    this.environmentScope = environmentScope;
    return this;
  }

   /**
   * The associated environment to the cluster
   * @return environmentScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "*", value = "The associated environment to the cluster")

  public String getEnvironmentScope() {
    return environmentScope;
  }


  public void setEnvironmentScope(String environmentScope) {
    
    
    
    this.environmentScope = environmentScope;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest namespacePerEnvironment(Boolean namespacePerEnvironment) {
    
    
    
    
    this.namespacePerEnvironment = namespacePerEnvironment;
    return this;
  }

   /**
   * Deploy each environment to a separate Kubernetes namespace
   * @return namespacePerEnvironment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Deploy each environment to a separate Kubernetes namespace")

  public Boolean getNamespacePerEnvironment() {
    return namespacePerEnvironment;
  }


  public void setNamespacePerEnvironment(Boolean namespacePerEnvironment) {
    
    
    
    this.namespacePerEnvironment = namespacePerEnvironment;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest domain(String domain) {
    
    
    
    
    this.domain = domain;
    return this;
  }

   /**
   * Cluster base domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cluster base domain")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    
    
    
    this.domain = domain;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest managementProjectId(Integer managementProjectId) {
    
    
    
    
    this.managementProjectId = managementProjectId;
    return this;
  }

   /**
   * The ID of the management project
   * @return managementProjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the management project")

  public Integer getManagementProjectId() {
    return managementProjectId;
  }


  public void setManagementProjectId(Integer managementProjectId) {
    
    
    
    this.managementProjectId = managementProjectId;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest managed(Boolean managed) {
    
    
    
    
    this.managed = managed;
    return this;
  }

   /**
   * Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true
   * @return managed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true")

  public Boolean getManaged() {
    return managed;
  }


  public void setManaged(Boolean managed) {
    
    
    
    this.managed = managed;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest platformKubernetesAttributesApiUrl(String platformKubernetesAttributesApiUrl) {
    
    
    
    
    this.platformKubernetesAttributesApiUrl = platformKubernetesAttributesApiUrl;
    return this;
  }

   /**
   * URL to access the Kubernetes API
   * @return platformKubernetesAttributesApiUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "URL to access the Kubernetes API")

  public String getPlatformKubernetesAttributesApiUrl() {
    return platformKubernetesAttributesApiUrl;
  }


  public void setPlatformKubernetesAttributesApiUrl(String platformKubernetesAttributesApiUrl) {
    
    
    
    this.platformKubernetesAttributesApiUrl = platformKubernetesAttributesApiUrl;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest platformKubernetesAttributesToken(String platformKubernetesAttributesToken) {
    
    
    
    
    this.platformKubernetesAttributesToken = platformKubernetesAttributesToken;
    return this;
  }

   /**
   * Token to authenticate against Kubernetes
   * @return platformKubernetesAttributesToken
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Token to authenticate against Kubernetes")

  public String getPlatformKubernetesAttributesToken() {
    return platformKubernetesAttributesToken;
  }


  public void setPlatformKubernetesAttributesToken(String platformKubernetesAttributesToken) {
    
    
    
    this.platformKubernetesAttributesToken = platformKubernetesAttributesToken;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest platformKubernetesAttributesCaCert(String platformKubernetesAttributesCaCert) {
    
    
    
    
    this.platformKubernetesAttributesCaCert = platformKubernetesAttributesCaCert;
    return this;
  }

   /**
   * TLS certificate (needed if API is using a self-signed TLS certificate)
   * @return platformKubernetesAttributesCaCert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TLS certificate (needed if API is using a self-signed TLS certificate)")

  public String getPlatformKubernetesAttributesCaCert() {
    return platformKubernetesAttributesCaCert;
  }


  public void setPlatformKubernetesAttributesCaCert(String platformKubernetesAttributesCaCert) {
    
    
    
    this.platformKubernetesAttributesCaCert = platformKubernetesAttributesCaCert;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest platformKubernetesAttributesNamespace(String platformKubernetesAttributesNamespace) {
    
    
    
    
    this.platformKubernetesAttributesNamespace = platformKubernetesAttributesNamespace;
    return this;
  }

   /**
   * Unique namespace related to Project
   * @return platformKubernetesAttributesNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique namespace related to Project")

  public String getPlatformKubernetesAttributesNamespace() {
    return platformKubernetesAttributesNamespace;
  }


  public void setPlatformKubernetesAttributesNamespace(String platformKubernetesAttributesNamespace) {
    
    
    
    this.platformKubernetesAttributesNamespace = platformKubernetesAttributesNamespace;
  }


  public ClustersAddExistingKubernetesInstanceClusterRequest platformKubernetesAttributesAuthorizationType(PlatformKubernetesAttributesAuthorizationTypeEnum platformKubernetesAttributesAuthorizationType) {
    
    
    
    
    this.platformKubernetesAttributesAuthorizationType = platformKubernetesAttributesAuthorizationType;
    return this;
  }

   /**
   * Cluster authorization type, defaults to RBAC
   * @return platformKubernetesAttributesAuthorizationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "RBAC", value = "Cluster authorization type, defaults to RBAC")

  public PlatformKubernetesAttributesAuthorizationTypeEnum getPlatformKubernetesAttributesAuthorizationType() {
    return platformKubernetesAttributesAuthorizationType;
  }


  public void setPlatformKubernetesAttributesAuthorizationType(PlatformKubernetesAttributesAuthorizationTypeEnum platformKubernetesAttributesAuthorizationType) {
    
    
    
    this.platformKubernetesAttributesAuthorizationType = platformKubernetesAttributesAuthorizationType;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ClustersAddExistingKubernetesInstanceClusterRequest instance itself
   */
  public ClustersAddExistingKubernetesInstanceClusterRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClustersAddExistingKubernetesInstanceClusterRequest clustersAddExistingKubernetesInstanceClusterRequest = (ClustersAddExistingKubernetesInstanceClusterRequest) o;
    return Objects.equals(this.name, clustersAddExistingKubernetesInstanceClusterRequest.name) &&
        Objects.equals(this.enabled, clustersAddExistingKubernetesInstanceClusterRequest.enabled) &&
        Objects.equals(this.environmentScope, clustersAddExistingKubernetesInstanceClusterRequest.environmentScope) &&
        Objects.equals(this.namespacePerEnvironment, clustersAddExistingKubernetesInstanceClusterRequest.namespacePerEnvironment) &&
        Objects.equals(this.domain, clustersAddExistingKubernetesInstanceClusterRequest.domain) &&
        Objects.equals(this.managementProjectId, clustersAddExistingKubernetesInstanceClusterRequest.managementProjectId) &&
        Objects.equals(this.managed, clustersAddExistingKubernetesInstanceClusterRequest.managed) &&
        Objects.equals(this.platformKubernetesAttributesApiUrl, clustersAddExistingKubernetesInstanceClusterRequest.platformKubernetesAttributesApiUrl) &&
        Objects.equals(this.platformKubernetesAttributesToken, clustersAddExistingKubernetesInstanceClusterRequest.platformKubernetesAttributesToken) &&
        Objects.equals(this.platformKubernetesAttributesCaCert, clustersAddExistingKubernetesInstanceClusterRequest.platformKubernetesAttributesCaCert) &&
        Objects.equals(this.platformKubernetesAttributesNamespace, clustersAddExistingKubernetesInstanceClusterRequest.platformKubernetesAttributesNamespace) &&
        Objects.equals(this.platformKubernetesAttributesAuthorizationType, clustersAddExistingKubernetesInstanceClusterRequest.platformKubernetesAttributesAuthorizationType)&&
        Objects.equals(this.additionalProperties, clustersAddExistingKubernetesInstanceClusterRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, enabled, environmentScope, namespacePerEnvironment, domain, managementProjectId, managed, platformKubernetesAttributesApiUrl, platformKubernetesAttributesToken, platformKubernetesAttributesCaCert, platformKubernetesAttributesNamespace, platformKubernetesAttributesAuthorizationType, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClustersAddExistingKubernetesInstanceClusterRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    environmentScope: ").append(toIndentedString(environmentScope)).append("\n");
    sb.append("    namespacePerEnvironment: ").append(toIndentedString(namespacePerEnvironment)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    managementProjectId: ").append(toIndentedString(managementProjectId)).append("\n");
    sb.append("    managed: ").append(toIndentedString(managed)).append("\n");
    sb.append("    platformKubernetesAttributesApiUrl: ").append(toIndentedString(platformKubernetesAttributesApiUrl)).append("\n");
    sb.append("    platformKubernetesAttributesToken: ").append(toIndentedString(platformKubernetesAttributesToken)).append("\n");
    sb.append("    platformKubernetesAttributesCaCert: ").append(toIndentedString(platformKubernetesAttributesCaCert)).append("\n");
    sb.append("    platformKubernetesAttributesNamespace: ").append(toIndentedString(platformKubernetesAttributesNamespace)).append("\n");
    sb.append("    platformKubernetesAttributesAuthorizationType: ").append(toIndentedString(platformKubernetesAttributesAuthorizationType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("enabled");
    openapiFields.add("environment_scope");
    openapiFields.add("namespace_per_environment");
    openapiFields.add("domain");
    openapiFields.add("management_project_id");
    openapiFields.add("managed");
    openapiFields.add("platform_kubernetes_attributes[api_url]");
    openapiFields.add("platform_kubernetes_attributes[token]");
    openapiFields.add("platform_kubernetes_attributes[ca_cert]");
    openapiFields.add("platform_kubernetes_attributes[namespace]");
    openapiFields.add("platform_kubernetes_attributes[authorization_type]");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("platform_kubernetes_attributes[api_url]");
    openapiRequiredFields.add("platform_kubernetes_attributes[token]");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ClustersAddExistingKubernetesInstanceClusterRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ClustersAddExistingKubernetesInstanceClusterRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClustersAddExistingKubernetesInstanceClusterRequest is not found in the empty JSON string", ClustersAddExistingKubernetesInstanceClusterRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ClustersAddExistingKubernetesInstanceClusterRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("environment_scope") != null && !jsonObj.get("environment_scope").isJsonNull()) && !jsonObj.get("environment_scope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment_scope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment_scope").toString()));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if (!jsonObj.get("platform_kubernetes_attributes[api_url]").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_kubernetes_attributes[api_url]` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_kubernetes_attributes[api_url]").toString()));
      }
      if (!jsonObj.get("platform_kubernetes_attributes[token]").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_kubernetes_attributes[token]` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_kubernetes_attributes[token]").toString()));
      }
      if ((jsonObj.get("platform_kubernetes_attributes[ca_cert]") != null && !jsonObj.get("platform_kubernetes_attributes[ca_cert]").isJsonNull()) && !jsonObj.get("platform_kubernetes_attributes[ca_cert]").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_kubernetes_attributes[ca_cert]` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_kubernetes_attributes[ca_cert]").toString()));
      }
      if ((jsonObj.get("platform_kubernetes_attributes[namespace]") != null && !jsonObj.get("platform_kubernetes_attributes[namespace]").isJsonNull()) && !jsonObj.get("platform_kubernetes_attributes[namespace]").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_kubernetes_attributes[namespace]` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_kubernetes_attributes[namespace]").toString()));
      }
      if ((jsonObj.get("platform_kubernetes_attributes[authorization_type]") != null && !jsonObj.get("platform_kubernetes_attributes[authorization_type]").isJsonNull()) && !jsonObj.get("platform_kubernetes_attributes[authorization_type]").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_kubernetes_attributes[authorization_type]` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_kubernetes_attributes[authorization_type]").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClustersAddExistingKubernetesInstanceClusterRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClustersAddExistingKubernetesInstanceClusterRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClustersAddExistingKubernetesInstanceClusterRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClustersAddExistingKubernetesInstanceClusterRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ClustersAddExistingKubernetesInstanceClusterRequest>() {
           @Override
           public void write(JsonWriter out, ClustersAddExistingKubernetesInstanceClusterRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ClustersAddExistingKubernetesInstanceClusterRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ClustersAddExistingKubernetesInstanceClusterRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClustersAddExistingKubernetesInstanceClusterRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClustersAddExistingKubernetesInstanceClusterRequest
  * @throws IOException if the JSON string is invalid with respect to ClustersAddExistingKubernetesInstanceClusterRequest
  */
  public static ClustersAddExistingKubernetesInstanceClusterRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClustersAddExistingKubernetesInstanceClusterRequest.class);
  }

 /**
  * Convert an instance of ClustersAddExistingKubernetesInstanceClusterRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

