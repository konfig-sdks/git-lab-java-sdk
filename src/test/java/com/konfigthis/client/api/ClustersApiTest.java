/*
 * GitLab API
 * An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.APIEntitiesCluster;
import com.konfigthis.client.model.ClustersAddExistingKubernetesInstanceClusterRequest;
import com.konfigthis.client.model.ClustersUpdateInstanceClusterRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClustersApi
 */
@Disabled
public class ClustersApiTest {

    private static ClustersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ClustersApi(apiClient);
    }

    /**
     * Add existing instance cluster
     *
     * This feature was introduced in GitLab 13.2. Adds an existing Kubernetes instance cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExistingKubernetesInstanceClusterTest() throws ApiException {
        String name = null;
        String platformKubernetesAttributesApiUrl = null;
        String platformKubernetesAttributesToken = null;
        Boolean enabled = null;
        String environmentScope = null;
        Boolean namespacePerEnvironment = null;
        String domain = null;
        Integer managementProjectId = null;
        Boolean managed = null;
        String platformKubernetesAttributesCaCert = null;
        String platformKubernetesAttributesNamespace = null;
        String platformKubernetesAttributesAuthorizationType = null;
        APIEntitiesCluster response = api.addExistingKubernetesInstanceCluster(name, platformKubernetesAttributesApiUrl, platformKubernetesAttributesToken)
                .enabled(enabled)
                .environmentScope(environmentScope)
                .namespacePerEnvironment(namespacePerEnvironment)
                .domain(domain)
                .managementProjectId(managementProjectId)
                .managed(managed)
                .platformKubernetesAttributesCaCert(platformKubernetesAttributesCaCert)
                .platformKubernetesAttributesNamespace(platformKubernetesAttributesNamespace)
                .platformKubernetesAttributesAuthorizationType(platformKubernetesAttributesAuthorizationType)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete instance cluster
     *
     * This feature was introduced in GitLab 13.2. Deletes an existing instance cluster. Does not remove existing resources within the connected Kubernetes cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInstanceClusterTest() throws ApiException {
        Integer clusterId = null;
        APIEntitiesCluster response = api.deleteInstanceCluster(clusterId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a single instance cluster
     *
     * This feature was introduced in GitLab 13.2. Returns a single instance cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleInstanceClusterTest() throws ApiException {
        Integer clusterId = null;
        APIEntitiesCluster response = api.getSingleInstanceCluster(clusterId)
                .execute();
        // TODO: test validations
    }

    /**
     * List instance clusters
     *
     * This feature was introduced in GitLab 13.2. Returns a list of instance clusters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInstanceClustersTest() throws ApiException {
        List<APIEntitiesCluster> response = api.listInstanceClusters()
                .execute();
        // TODO: test validations
    }

    /**
     * Edit instance cluster
     *
     * This feature was introduced in GitLab 13.2. Updates an existing instance cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInstanceClusterTest() throws ApiException {
        Integer clusterId = null;
        String name = null;
        Boolean enabled = null;
        String environmentScope = null;
        Boolean namespacePerEnvironment = null;
        String domain = null;
        Integer managementProjectId = null;
        Boolean managed = null;
        String platformKubernetesAttributesApiUrl = null;
        String platformKubernetesAttributesToken = null;
        String platformKubernetesAttributesCaCert = null;
        String platformKubernetesAttributesNamespace = null;
        APIEntitiesCluster response = api.updateInstanceCluster(clusterId)
                .name(name)
                .enabled(enabled)
                .environmentScope(environmentScope)
                .namespacePerEnvironment(namespacePerEnvironment)
                .domain(domain)
                .managementProjectId(managementProjectId)
                .managed(managed)
                .platformKubernetesAttributesApiUrl(platformKubernetesAttributesApiUrl)
                .platformKubernetesAttributesToken(platformKubernetesAttributesToken)
                .platformKubernetesAttributesCaCert(platformKubernetesAttributesCaCert)
                .platformKubernetesAttributesNamespace(platformKubernetesAttributesNamespace)
                .execute();
        // TODO: test validations
    }

}
